package com.guhao.study.code.create.abstractfactory;

/**
 * @Author guhao
 * @DateTime 2019-09-12 11:31
 * @Description 抽象工厂模式：抽象工厂接口
 * 是一种为访问类提供一个创建一组相关或相互依赖对象的接口，
 * 且访问类无须指定所要产品的具体类就能得到同族的不同等级的产品的模式结构
 *
 *
 * 系统中有多个产品族，每个具体工厂创建同一族但属于不同等级结构的产品。
 * 系统一次只可能消费其中某一族产品，即同族的产品一起使用。
 *
 * 抽象工厂模式的扩展有一定的“开闭原则”倾斜性：
 * 当增加一个新的产品族时只需增加一个新的具体工厂，不需要修改原代码，满足开闭原则。
 * 当产品族中需要增加一个新种类的产品时，则所有的工厂类都需要进行修改，不满足开闭原则。
 *
 * 另一方面，当系统中只存在一个等级结构的产品时，抽象工厂模式将退化到工厂方法模式。
 **/

public interface AbstractFactory {
    Product1 produce1();
    Product2 produce2();
}
